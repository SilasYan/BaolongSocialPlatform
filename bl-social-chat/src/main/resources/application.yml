baolong:
  social:
    websocket:
      port: 8899

server:
  port: 8800
  servlet:
    context-path: /

spring:
  application:
    name: bl-social-chat
  profiles:
    active: local
  jackson:
    serialization:
      write-dates-as-timestamps: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${baolong.social.mysql.ip}:${baolong.social.mysql.port}/${baolong.social.mysql.dbname}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${baolong.social.mysql.username}
    password: ${baolong.social.mysql.password}
  data:
    redis:
      host: ${baolong.social.redis.host}
      port: ${baolong.social.redis.port}
      database: ${baolong.social.redis.database}
      password: ${baolong.social.redis.password}
      # 连接超时时间（单位: 毫秒, 30分钟）
      timeout: 1800000
      jedis:
        pool:
          enabled: true
          min-idle: 10
          max-idle: 100
          max-active: 100
          max-wait: -1
  ############### 邮箱配置 ###############
  mail:
    host: ${baolong.social.email.host}
    port: ${baolong.social.email.port}
    nickname: ${baolong.social.email.nickname}
    username: ${baolong.social.email.username}
    password: ${baolong.social.email.password}
    protocol: ${baolong.social.email.protocol}
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
          socketFactory:
            port: ${spring.social.email.port}
            class: javax.net.ssl.SSLSocketFactory

################ MyBatis-Plus ###############
mybatis-plus:
  # mapper 文件位置
  mapper-locations: classpath:/mapper/**/*.xml
  configuration:
    # 开启驼峰命名
    map-underscore-to-camel-case: true
    # 日志配置
    log-impl: ${baolong.log.mybatis.plus.log.impl}
  # 全局配置
  global-config:
    # 是否开启启动打印的 LOGO
    banner: false
    db-config:
      # 表名是否使用下划线命名
      table-underline: true
      # 全局逻辑删除的实体字段名
      logic-delete-field: isDelete
      # 逻辑已删除值（默认为 1）
      logic-delete-value: 1
      # 逻辑未删除值（默认为 0）
      logic-not-delete-value: 0

################ 微信公众号配置 ###############
wechat:
  mp:
    useRedis: false
    redisConfig:
      host: 127.0.0.1
      port: 6379
    callback: ${baolong.social.wechat.mp.callback}
    # 可以配置多个
    configs:
      # 公众号的appid
      - appId: ${baolong.social.wechat.mp.appId}
        # 公众号的appsecret
        secret: ${baolong.social.wechat.mp.appSecret}
        # 接口配置里的Token值
        token: ${baolong.social.wechat.mp.token}
        # 接口配置里的EncodingAESKey值
        aesKey: ${baolong.social.wechat.mp.aesKey}

################ RocketMQ 配置 ###############
rocketmq:
  name-server: ${baolong.social.rocketmq.name-server}
  producer:
    group: bl-social-chat-producer
    # 发送消息超时时间（毫秒）
    send-message-timeout: 3000
    # 消息压缩阈值（单位：字节）
    compress-message-body-threshold: 4096
    # 同步发送消息时, 失败重试次数
    retry-times-when-send-failed: 2
    # 异步发送消息时, 失败重试次数
    retry-times-when-send-async-failed: 2
    # 发送消息给 Broker 时, 是否在失败后重试发送给其他 Broker
    retry-next-server: false
    access-key: ${baolong.social.rocketmq.access-key}
    secret-key: ${baolong.social.rocketmq.secret-key}
  consumer:
    group: bl-social-chat-consumer
    access-key: ${baolong.social.rocketmq.access-key}
    secret-key: ${baolong.social.rocketmq.secret-key}

################ Sa-Token 配置 ###############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: token
  # token 前缀
  token-prefix: Bearer
  # jwt秘钥
  jwt-secret-key: BaolongSocialPlatform
  # token 有效期（单位：秒） 1 天，-1 代表永久有效
  timeout: 86400
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: ${baolong.log.sa-token.log}
  is-read-header: true
  is-read-cookie: false

################ 日志配置 ###############
logging:
  config: classpath:logback-spring.xml
  file:
    path: ${baolong.log.logging.file.path}

################ 接口文档配置 ###############
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: icu.baolong.social.controller
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  cors: true
  setting:
    language: zh_cn
  basic:
    enable: false
    username: baolong
    password: baolong
